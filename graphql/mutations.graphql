# this is an auto generated file. This will be overwritten
mutation CreateInstitution(
  $input: CreateInstitutionInput!
  $condition: ModelInstitutionConditionInput
) {
  createInstitution(input: $input, condition: $condition) {
    name
    location
    pageUrl
    campusMapUrl
    openingTime
    closingTime
    minimumDuration
    lectureremails
    coursecodes
    domains
    admin {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      id
      createdAt
      updatedAt
      adminInstitutionId
      owner
    }
    courses {
      items {
        coursecode
        coursename
        semester
        id
        createdAt
        updatedAt
        institutionCoursesId
      }
      nextToken
    }
    students {
      items {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        institutionStudentsId
        studentInstitutionId
        owner
      }
      nextToken
    }
    lecturer {
      items {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        institutionLecturerId
        owner
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionAdminId
  }
}
mutation UpdateInstitution(
  $input: UpdateInstitutionInput!
  $condition: ModelInstitutionConditionInput
) {
  updateInstitution(input: $input, condition: $condition) {
    name
    location
    pageUrl
    campusMapUrl
    openingTime
    closingTime
    minimumDuration
    lectureremails
    coursecodes
    domains
    admin {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      id
      createdAt
      updatedAt
      adminInstitutionId
      owner
    }
    courses {
      items {
        coursecode
        coursename
        semester
        id
        createdAt
        updatedAt
        institutionCoursesId
      }
      nextToken
    }
    students {
      items {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        institutionStudentsId
        studentInstitutionId
        owner
      }
      nextToken
    }
    lecturer {
      items {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        institutionLecturerId
        owner
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionAdminId
  }
}
mutation DeleteInstitution(
  $input: DeleteInstitutionInput!
  $condition: ModelInstitutionConditionInput
) {
  deleteInstitution(input: $input, condition: $condition) {
    name
    location
    pageUrl
    campusMapUrl
    openingTime
    closingTime
    minimumDuration
    lectureremails
    coursecodes
    domains
    admin {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      id
      createdAt
      updatedAt
      adminInstitutionId
      owner
    }
    courses {
      items {
        coursecode
        coursename
        semester
        id
        createdAt
        updatedAt
        institutionCoursesId
      }
      nextToken
    }
    students {
      items {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        institutionStudentsId
        studentInstitutionId
        owner
      }
      nextToken
    }
    lecturer {
      items {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        institutionLecturerId
        owner
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionAdminId
  }
}
mutation CreateAdmin(
  $input: CreateAdminInput!
  $condition: ModelAdminConditionInput
) {
  createAdmin(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    id
    createdAt
    updatedAt
    adminInstitutionId
    owner
  }
}
mutation UpdateAdmin(
  $input: UpdateAdminInput!
  $condition: ModelAdminConditionInput
) {
  updateAdmin(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    id
    createdAt
    updatedAt
    adminInstitutionId
    owner
  }
}
mutation DeleteAdmin(
  $input: DeleteAdminInput!
  $condition: ModelAdminConditionInput
) {
  deleteAdmin(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    id
    createdAt
    updatedAt
    adminInstitutionId
    owner
  }
}
mutation CreateLecturer(
  $input: CreateLecturerInput!
  $condition: ModelLecturerConditionInput
) {
  createLecturer(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    presents {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionLecturerId
    owner
  }
}
mutation UpdateLecturer(
  $input: UpdateLecturerInput!
  $condition: ModelLecturerConditionInput
) {
  updateLecturer(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    presents {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionLecturerId
    owner
  }
}
mutation DeleteLecturer(
  $input: DeleteLecturerInput!
  $condition: ModelLecturerConditionInput
) {
  deleteLecturer(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    presents {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionLecturerId
    owner
  }
}
mutation CreatePresent(
  $input: CreatePresentInput!
  $condition: ModelPresentConditionInput
) {
  createPresent(input: $input, condition: $condition) {
    lecturerId
    courseId
    lecturer {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionLecturerId
      owner
    }
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    coursePresentsId
    presentLecturerId
    presentCourseId
  }
}
mutation UpdatePresent(
  $input: UpdatePresentInput!
  $condition: ModelPresentConditionInput
) {
  updatePresent(input: $input, condition: $condition) {
    lecturerId
    courseId
    lecturer {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionLecturerId
      owner
    }
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    coursePresentsId
    presentLecturerId
    presentCourseId
  }
}
mutation DeletePresent(
  $input: DeletePresentInput!
  $condition: ModelPresentConditionInput
) {
  deletePresent(input: $input, condition: $condition) {
    lecturerId
    courseId
    lecturer {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionLecturerId
      owner
    }
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    coursePresentsId
    presentLecturerId
    presentCourseId
  }
}
mutation CreateStudent(
  $input: CreateStudentInput!
  $condition: ModelStudentConditionInput
) {
  createStudent(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    timetable {
      items {
        studentId
        activityId
        id
        createdAt
        updatedAt
        studentTimetableId
        activityTimetableId
        timetableStudentId
        timetableActivityId
      }
      nextToken
    }
    enrollments {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionStudentsId
    studentInstitutionId
    owner
  }
}
mutation UpdateStudent(
  $input: UpdateStudentInput!
  $condition: ModelStudentConditionInput
) {
  updateStudent(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    timetable {
      items {
        studentId
        activityId
        id
        createdAt
        updatedAt
        studentTimetableId
        activityTimetableId
        timetableStudentId
        timetableActivityId
      }
      nextToken
    }
    enrollments {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionStudentsId
    studentInstitutionId
    owner
  }
}
mutation DeleteStudent(
  $input: DeleteStudentInput!
  $condition: ModelStudentConditionInput
) {
  deleteStudent(input: $input, condition: $condition) {
    institutionId
    firstname
    lastname
    userRole
    email
    institution {
      name
      location
      pageUrl
      campusMapUrl
      openingTime
      closingTime
      minimumDuration
      lectureremails
      coursecodes
      domains
      admin {
        institutionId
        firstname
        lastname
        userRole
        email
        id
        createdAt
        updatedAt
        adminInstitutionId
        owner
      }
      courses {
        nextToken
      }
      students {
        nextToken
      }
      lecturer {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionAdminId
    }
    timetable {
      items {
        studentId
        activityId
        id
        createdAt
        updatedAt
        studentTimetableId
        activityTimetableId
        timetableStudentId
        timetableActivityId
      }
      nextToken
    }
    enrollments {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionStudentsId
    studentInstitutionId
    owner
  }
}
mutation CreateEnrollment(
  $input: CreateEnrollmentInput!
  $condition: ModelEnrollmentConditionInput
) {
  createEnrollment(input: $input, condition: $condition) {
    studentId
    courseId
    year
    student {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      timetable {
        nextToken
      }
      enrollments {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionStudentsId
      studentInstitutionId
      owner
    }
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    lecturerPresentsId
    studentEnrollmentsId
    courseEnrollmentsId
    enrollmentStudentId
    enrollmentCourseId
  }
}
mutation UpdateEnrollment(
  $input: UpdateEnrollmentInput!
  $condition: ModelEnrollmentConditionInput
) {
  updateEnrollment(input: $input, condition: $condition) {
    studentId
    courseId
    year
    student {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      timetable {
        nextToken
      }
      enrollments {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionStudentsId
      studentInstitutionId
      owner
    }
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    lecturerPresentsId
    studentEnrollmentsId
    courseEnrollmentsId
    enrollmentStudentId
    enrollmentCourseId
  }
}
mutation DeleteEnrollment(
  $input: DeleteEnrollmentInput!
  $condition: ModelEnrollmentConditionInput
) {
  deleteEnrollment(input: $input, condition: $condition) {
    studentId
    courseId
    year
    student {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      timetable {
        nextToken
      }
      enrollments {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionStudentsId
      studentInstitutionId
      owner
    }
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    lecturerPresentsId
    studentEnrollmentsId
    courseEnrollmentsId
    enrollmentStudentId
    enrollmentCourseId
  }
}
mutation CreateCourse(
  $input: CreateCourseInput!
  $condition: ModelCourseConditionInput
) {
  createCourse(input: $input, condition: $condition) {
    coursecode
    coursename
    semester
    enrollments {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    activity {
      items {
        courseId
        activityname
        day
        start
        end
        venue
        group
        frequency
        id
        createdAt
        updatedAt
        courseActivityId
        activityCourseId
      }
      nextToken
    }
    announcents {
      items {
        courseId
        description
        start
        end
        date
        venue
        id
        createdAt
        updatedAt
        courseAnnouncentsId
        announcementCourseId
      }
      nextToken
    }
    presents {
      items {
        lecturerId
        courseId
        id
        createdAt
        updatedAt
        coursePresentsId
        presentLecturerId
        presentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionCoursesId
  }
}
mutation UpdateCourse(
  $input: UpdateCourseInput!
  $condition: ModelCourseConditionInput
) {
  updateCourse(input: $input, condition: $condition) {
    coursecode
    coursename
    semester
    enrollments {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    activity {
      items {
        courseId
        activityname
        day
        start
        end
        venue
        group
        frequency
        id
        createdAt
        updatedAt
        courseActivityId
        activityCourseId
      }
      nextToken
    }
    announcents {
      items {
        courseId
        description
        start
        end
        date
        venue
        id
        createdAt
        updatedAt
        courseAnnouncentsId
        announcementCourseId
      }
      nextToken
    }
    presents {
      items {
        lecturerId
        courseId
        id
        createdAt
        updatedAt
        coursePresentsId
        presentLecturerId
        presentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionCoursesId
  }
}
mutation DeleteCourse(
  $input: DeleteCourseInput!
  $condition: ModelCourseConditionInput
) {
  deleteCourse(input: $input, condition: $condition) {
    coursecode
    coursename
    semester
    enrollments {
      items {
        studentId
        courseId
        year
        id
        createdAt
        updatedAt
        lecturerPresentsId
        studentEnrollmentsId
        courseEnrollmentsId
        enrollmentStudentId
        enrollmentCourseId
      }
      nextToken
    }
    activity {
      items {
        courseId
        activityname
        day
        start
        end
        venue
        group
        frequency
        id
        createdAt
        updatedAt
        courseActivityId
        activityCourseId
      }
      nextToken
    }
    announcents {
      items {
        courseId
        description
        start
        end
        date
        venue
        id
        createdAt
        updatedAt
        courseAnnouncentsId
        announcementCourseId
      }
      nextToken
    }
    presents {
      items {
        lecturerId
        courseId
        id
        createdAt
        updatedAt
        coursePresentsId
        presentLecturerId
        presentCourseId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    institutionCoursesId
  }
}
mutation CreateTimetable(
  $input: CreateTimetableInput!
  $condition: ModelTimetableConditionInput
) {
  createTimetable(input: $input, condition: $condition) {
    studentId
    activityId
    student {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      timetable {
        nextToken
      }
      enrollments {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionStudentsId
      studentInstitutionId
      owner
    }
    activity {
      courseId
      activityname
      day
      start
      end
      venue
      group
      frequency
      course {
        coursecode
        coursename
        semester
        id
        createdAt
        updatedAt
        institutionCoursesId
      }
      timetable {
        nextToken
      }
      id
      createdAt
      updatedAt
      courseActivityId
      activityCourseId
    }
    id
    createdAt
    updatedAt
    studentTimetableId
    activityTimetableId
    timetableStudentId
    timetableActivityId
  }
}
mutation UpdateTimetable(
  $input: UpdateTimetableInput!
  $condition: ModelTimetableConditionInput
) {
  updateTimetable(input: $input, condition: $condition) {
    studentId
    activityId
    student {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      timetable {
        nextToken
      }
      enrollments {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionStudentsId
      studentInstitutionId
      owner
    }
    activity {
      courseId
      activityname
      day
      start
      end
      venue
      group
      frequency
      course {
        coursecode
        coursename
        semester
        id
        createdAt
        updatedAt
        institutionCoursesId
      }
      timetable {
        nextToken
      }
      id
      createdAt
      updatedAt
      courseActivityId
      activityCourseId
    }
    id
    createdAt
    updatedAt
    studentTimetableId
    activityTimetableId
    timetableStudentId
    timetableActivityId
  }
}
mutation DeleteTimetable(
  $input: DeleteTimetableInput!
  $condition: ModelTimetableConditionInput
) {
  deleteTimetable(input: $input, condition: $condition) {
    studentId
    activityId
    student {
      institutionId
      firstname
      lastname
      userRole
      email
      institution {
        name
        location
        pageUrl
        campusMapUrl
        openingTime
        closingTime
        minimumDuration
        lectureremails
        coursecodes
        domains
        id
        createdAt
        updatedAt
        institutionAdminId
      }
      timetable {
        nextToken
      }
      enrollments {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionStudentsId
      studentInstitutionId
      owner
    }
    activity {
      courseId
      activityname
      day
      start
      end
      venue
      group
      frequency
      course {
        coursecode
        coursename
        semester
        id
        createdAt
        updatedAt
        institutionCoursesId
      }
      timetable {
        nextToken
      }
      id
      createdAt
      updatedAt
      courseActivityId
      activityCourseId
    }
    id
    createdAt
    updatedAt
    studentTimetableId
    activityTimetableId
    timetableStudentId
    timetableActivityId
  }
}
mutation CreateActivity(
  $input: CreateActivityInput!
  $condition: ModelActivityConditionInput
) {
  createActivity(input: $input, condition: $condition) {
    courseId
    activityname
    day
    start
    end
    venue
    group
    frequency
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    timetable {
      items {
        studentId
        activityId
        id
        createdAt
        updatedAt
        studentTimetableId
        activityTimetableId
        timetableStudentId
        timetableActivityId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    courseActivityId
    activityCourseId
  }
}
mutation UpdateActivity(
  $input: UpdateActivityInput!
  $condition: ModelActivityConditionInput
) {
  updateActivity(input: $input, condition: $condition) {
    courseId
    activityname
    day
    start
    end
    venue
    group
    frequency
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    timetable {
      items {
        studentId
        activityId
        id
        createdAt
        updatedAt
        studentTimetableId
        activityTimetableId
        timetableStudentId
        timetableActivityId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    courseActivityId
    activityCourseId
  }
}
mutation DeleteActivity(
  $input: DeleteActivityInput!
  $condition: ModelActivityConditionInput
) {
  deleteActivity(input: $input, condition: $condition) {
    courseId
    activityname
    day
    start
    end
    venue
    group
    frequency
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    timetable {
      items {
        studentId
        activityId
        id
        createdAt
        updatedAt
        studentTimetableId
        activityTimetableId
        timetableStudentId
        timetableActivityId
      }
      nextToken
    }
    id
    createdAt
    updatedAt
    courseActivityId
    activityCourseId
  }
}
mutation CreateAnnouncement(
  $input: CreateAnnouncementInput!
  $condition: ModelAnnouncementConditionInput
) {
  createAnnouncement(input: $input, condition: $condition) {
    courseId
    description
    start
    end
    date
    venue
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    courseAnnouncentsId
    announcementCourseId
  }
}
mutation UpdateAnnouncement(
  $input: UpdateAnnouncementInput!
  $condition: ModelAnnouncementConditionInput
) {
  updateAnnouncement(input: $input, condition: $condition) {
    courseId
    description
    start
    end
    date
    venue
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    courseAnnouncentsId
    announcementCourseId
  }
}
mutation DeleteAnnouncement(
  $input: DeleteAnnouncementInput!
  $condition: ModelAnnouncementConditionInput
) {
  deleteAnnouncement(input: $input, condition: $condition) {
    courseId
    description
    start
    end
    date
    venue
    course {
      coursecode
      coursename
      semester
      enrollments {
        nextToken
      }
      activity {
        nextToken
      }
      announcents {
        nextToken
      }
      presents {
        nextToken
      }
      id
      createdAt
      updatedAt
      institutionCoursesId
    }
    id
    createdAt
    updatedAt
    courseAnnouncentsId
    announcementCourseId
  }
}
