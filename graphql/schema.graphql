type Institution @model {
  id: ID!
  name:String!
  location: String
  pageUrl:String
  campusMapUrl:String
  openingTime: timestamptz
  closingTime:timestamptz
  minimumDuration: number
  lectureremails:[String]
  coursecodes:[String]
  admin: Admin @connection(keyName: "byUser", fields: ["id"])
  user: [User] @connection(keyName: "byUser", fields: ["id"])
}

type Admin @model
 @key(name: "byInstitution", fields: ["institutionId"]){
  ld: String!
  firstname: String!
  lastname: String!
  userRole:String!
  email: String!
  institution: Institution! @connection(fields: ["institutionId"])
}

type Student @model @key(name: "byInstitution", fields: ["institutionId"]) {
  ld: String!
  firstname: String!
  lastname: String!
  userRole: String!
  email: String!
  institution: Institution! @connection(fields: ["institutionId"])
  enrollments: [Enrollment] @connection(keyName: "byStudent", fields: ["id"])
}

type Enrollment
  @model(queries: null)
  @key(name: "byStudent", fields: ["studentId", "courseId"])
  @key(name: "byCourse", fields: ["courseId", "studentId"]) {
  id: String!
  studentId: String!
  courseId: String!
  year: number
  student: Student! @connection(fields: ["studentId"])
  course: Course! @connection(fields: ["courseId"])
}

type Course @model {
  id: String!
  coursecode: String!
  coursename: String!
  semester: number
  enrollments: [Enrollment] @connection(keyname: "byCourse", fields: ["id"])
}
