type Institution @model @auth(rules: [{ allow: owner, ownerField: "admin" }, { allow: public, operations: [read] }]) {
  id: ID!
  name: String!
  location: String
  pageUrl: String
  campusMapUrl: String
  openingTime: String
  closingTime: String
  minimumDuration: Int
  lectureremails: [String]
  coursecodes: [String]
  domains: [String]
  admin: Admin @hasOne(fields: ["adminId"])
  adminId: ID!
  courses: [Course] @hasMany(indexName: "byCourse", fields: ["id"])
  students: [Student] @hasMany(indexName: "byStudent", fields: ["id"])
  lecturer: [Lecturer] @hasMany(indexName: "byLecturer", fields: ["id"])
}

type Admin @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  institutionId: ID
  firstname: String!
  lastname: String!
  userRole: String!
  email: String!
  institution: Institution @belongsTo(fields: ["institutionId"])
}

type Lecturer @model @auth(rules: [{ allow: public, operations: [read] }, { allow: owner }]) {
  id: ID!
  institutionId: ID! @index(name: "byLecturer")
  firstname: String!
  lastname: String!
  userRole: String!
  email: String!
  institution: Institution! @belongsTo(fields: ["institutionId"])
  courses: [Course] @hasMany(indexName: "byCourse", fields: ["id"])
}

type Student @model @auth(rules: [{ allow: owner }]) {
  institutionId: ID! @index(name: "byStudent")
  id: ID!
  firstname: String!
  lastname: String!
  userRole: String!
  email: String!
  institution: Institution! @belongsTo(fields: ["institutionId"])
  timetable: Timetable @hasOne
  enrollments: [Enrollment] @hasMany(indexName: "byEnrollment", fields: ["id"])
}

type Enrollment @model @auth(rules: [{ allow: owner, ownerField: "student" }]) {
  id: ID!
  studentId: ID! @index(name: "byEnrollment")
  courseId: ID!
  year: Int
  student: Student! @belongsTo(fields: ["studentId"])
  course: Course! @belongsTo(fields: ["courseId"])
}

type Course @model @searchable @auth(rules: [{ allow: owner, ownerField: "institutionId" }, { allow: public, operations: [read] }]) {
  id: ID!
  institutionId: ID! @index(name: "byCourse")
  lecturerId: ID
  coursecode: String!
  semester: Int
  enrollments: [Enrollment] @hasMany(indexName: "byEnrollment", fields: ["id"])
  activity: [Activity] @hasMany(indexName: "byActivity", fields: ["id"])
  announcents: [Announcement] @hasMany(indexName: "byAnnouncement", fields: ["id"])
  lecturer: Lecturer @belongsTo(fields: ["lecturerId"])
  institution: Institution! @belongsTo(fields: ["institutionId"])
}

type Timetable @model @auth(rules: [{ allow: owner, ownerField: "student" }]) {
  id: ID!
  studentId: ID!
  activityId: String!
  student: Student! @belongsTo(fields: ["studentId"])
  activities: [Activity]! @hasMany(indexName: "byActivity", fields: ["id"])
}

type Activity @model @searchable @auth(rules: [{ allow: owner, ownerField: "courseId" }]) {
  id: ID!
  courseId: ID! @index(name: "byActivity")
  activityname: String!
  day: String!
  start: String!
  end: String!
  venue: String!
  group: String!
  frequency: Int
  description: String!
  course: Course @belongsTo(fields: ["courseId"])
}

type Announcement @model @searchable @auth(rules: [{ allow: owner, ownerField: "course" }]) {
  id: ID!
  courseId: ID! @index(name: "byAnnouncement")
  description: String!
  start: String!
  end: String!
  date: String!
  venue: String!
  course: Course! @belongsTo(fields: ["courseId"])
}

# Failing Relations
# There are some relations that are failing, model needs to be improved
